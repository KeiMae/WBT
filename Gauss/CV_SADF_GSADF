/**************************************************************************
   "Testing for Multiple Bubbles" by Phillips, Shi and Yu (2011)
    
   In this program, we calculate critical values for the SADF and GASDF
   test.
   
   flag==1 SADF
   flag==2 GSADF
   
   Note: 
   The main difference between the CV_SADF_GSADF and CV_BADF_BSADF programs
   lies in the data generating process:
   CV_SADF_GSADF: random walk with an overall drift value of 1/T
   CV_BADF_BSADF: random walk with an drift value of 1/r2 for each r2
   
   Writtern by Shuping Shi @ Macquarie University
 **************************************************************************/
 

new;
#include ADF_FL.set; 
#include ADF_IC.set;
library  pgraph;

date1=date;

m=2000;                 @ Number of Replication@
flag=2;                 @ flag==1 for SADF flag==2 for GSADF@

nob=1680;                @ Sample Size @
r0=0.01+1.8/sqrt(nob);

swindow0=floor(r0*nob);            @ Minimum Window Size@
r0=swindow0/nob;
dim=nob-swindow0+1; 


/***************************************
     The data generating process
 **************************************/
a=1/nob;
rn=rndn(nob,m); 
y=cumsumc(rn+a);

/***************************************
     The SADF and GSADF Test 
 **************************************/
 
if flag==1;
   adfs=zeros(m,dim);
   sadf=ones(m,1);
elseif flag==2;
   sadfs=zeros(m,dim);
   gsadf=ones(m,1);
endif;

j=1;
r2=seqa(swindow0,1,dim);
do while j<=m;
  v=1;
  
  /*************** SADF Test *******************/
  if flag==1;                                             @ SADF@
     do while v<=rows(r2);
        tval= ADF_FL(y[1:r2[v],j],0,1);
        adfs[j,v]=tval[1];
        v=v+1;
     endo;    
     sadf[j,1]=maxc(adfs[j,.]');
   
   
   /*************** GSADF Test *******************/
  elseif flag==2;                                         @ GSADF@
    do while v<=rows(r2);
       swindow=seqa(swindow0,1,r2[v,1]-swindow0+1);   
       r1=r2[v,1]-swindow+1;
       adfs=zeros(rows(swindow),1);    
       i=1;
       do while i<=rows(swindow);
          tval= ADF_FL(y[r1[i]:r2[v,1],j],0,1);    @ Fixed lag order@
	      //tval= ADF_IC(y[r1[i]:r2[v,1],j],4,1,2);    @ AIC or BIC@
          adfs[i]=tval[1];
          i=i+1;
       endo;
       sadfs[j,v]=maxc(adfs);
       v=v+1;
    endo; 
    gsadf[j,1]=maxc(sadfs[j,.]');  
 endif;
   
j=j+1;
endo;

date2=date;
dated=ethsec(date1,date2)/100;
print "elapse seconds:"; dated;


e={0.90,0.95,0.99};

if flag==1;
    quantile_sadf=quantile(sadf,e); 
    
    //output file=D:\Dropbox\Research\Project_MultipleBubbles\Program_Feb2014\Gauss\CV_SADF100_r04 on;  
    print "=======================================================";
    print "The right-tail critical values for the SADF test are:";
    print E~quantile_sadf;
    //print sadf;
    
elseif flag==2;
    quantile_gsadf=quantile(gsadf,e); 
    
   // output file=D:Dropbox\Research\Project_MultipeBubbles\Program_Feb2014\Gauss\CV_GSADF100_r04 on; 
    print "=======================================================";
    print "The right-tail critical values or the GSADF test are:";
    print E~quantile_gsadf;
    //print gsadf;
endif;
    

end;




